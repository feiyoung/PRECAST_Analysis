names(hZ_umap3List_allsample)[2:3] <- names(hZ_umap3List_allsample)[3:2]
### Plot iDR-SC for 4 samples
pList_idrsc_umap_RGB <- list()
for(r in 1:4){## each sample
# i <- 1
pList_eachmethod <- list()
for(i in 1){  ## each method
# r <- 1
message("r = ", r)
pt_size = 0.5
if(r == 1) pt_size= 0.3
ptmp <- plot_RGB(posList1[[r]], hZ_umap3List_allsample[[i]][indexList[[r]],], pointsize = 0.8) +
mytheme_graybox(border_color = 'white') + xlim(c(0,77)) + ylim(c(1,120)) + geom_point(alpha=0.5)
pList_idrsc_umap_RGB[[r]]<- ptmp
}
}
setwd(paste0(dir_current, "dataFiles\\HCC4\\") )
ls()
##### 5b #####
object_delete <- setdiff(ls(), dir_current)
dir_current <- "E:\\Research paper\\IntegrateDRcluster\\AnalysisCode\\PRECAST_Analysis\\"
##### 5b #####
object_delete <- setdiff(ls(), dir_current)
rm(list=object_delete)
setwd(paste0(dir_current, "dataFiles\\HCC4\\") )
object_delete
setdiff(ls(), dir_current)
dir_current <- "E:\\Research paper\\IntegrateDRcluster\\AnalysisCode\\PRECAST_Analysis\\"
setdiff(ls(), dir_current)
setdiff(ls(), 'dir_current')
##### 5b #####
object_delete <- setdiff(ls(), 'dir_current')
rm(list=object_delete)
setwd(paste0(dir_current, "dataFiles\\HCC4\\") )
library(cowplot)
load("HCC4_posList.rds")
source(paste0(dir_current, "//utility_funcs.R"))
library(cowplot)
load("HCC4_posList.rds")
load("HCC4_RGB_hZ_umapList_allsample.rds")
posList1 <- posList
load("RGB_umap_tsne_paste_hcc4.rds")
str(hZ_umap3List_allsample)
## Add the results of PASTE
hZ_umap3List_allsample[["PASTE"]] <- hZ_umap3_paste
### RGB plot for each sample based Joint UMAP
indexList <- get_indexList(posList)
hZ_umap3List_allsample[2:3] <- hZ_umap3List_allsample[3:2]
names(hZ_umap3List_allsample)[2:3] <- names(hZ_umap3List_allsample)[3:2]
### Plot iDR-SC for 4 samples
pList_idrsc_umap_RGB <- list()
for(r in 1:4){## each sample
# i <- 1
pList_eachmethod <- list()
for(i in 1){  ## each method
# r <- 1
message("r = ", r)
pt_size = 0.5
if(r == 1) pt_size= 0.3
ptmp <- plot_RGB(posList1[[r]], hZ_umap3List_allsample[[i]][indexList[[r]],], pointsize = 0.8) +
mytheme_graybox(border_color = 'white') + xlim(c(0,77)) + ylim(c(1,120)) + geom_point(alpha=0.5)
pList_idrsc_umap_RGB[[r]]<- ptmp
}
}
p12 <- plot_grid(plotlist =pList_idrsc_umap_RGB, nrow=1, ncol=4)
p12
##### 4e #####
cols_alpha2 <- c(cols_alpha, '#57A6D9')
main_order_names2 <- c(main_order_names, "PASTE")
main_order_names2[1] <- iDR_SC_newname
## Plot Macfadden's adjusted R2
load('MacR2Vec_Bulb16_merge70.rds')
getwd()
##### 4b #####
object_delete <- setdiff(ls(), 'dir_current')
rm(list=object_delete)
source(paste0(dir_current, "//utility_funcs.R"))
setwd(paste0(dir_current, "dataFiles\\Bulb16\\") )
##### 4e #####
cols_alpha2 <- c(cols_alpha, '#57A6D9')
main_order_names2 <- c(main_order_names, "PASTE")
main_order_names2[1] <- iDR_SC_newname
## Plot Macfadden's adjusted R2
load('MacR2Vec_Bulb16_merge70.rds')
p1 <- barPlot_real(MacR2Vec[main_order_names2], cols = cols_alpha2, ylabel = "McFadden_R2")+theme_classic() +
theme( axis.text.x = element_blank() ) + theme(text = element_text(size=20))
main_order_names2
main_order_names2 <- c(main_order_names)
main_order_names2[1] <- iDR_SC_newname
p1 <- barPlot_real(MacR2Vec[main_order_names2], cols = cols_alpha2, ylabel = "McFadden_R2")+theme_classic() +
theme( axis.text.x = element_blank() ) + theme(text = element_text(size=20))
p1
load("metric_scvi_used_bulb16_merge.rds")
load("metric_clusterMat_deconCelltype_mergesubtype_bulb16_mergeV2.rds")
head(ariMat)
ariMat[,7] <- ariVec_scvi_used
nmiMat[,7] <- nmiVec_scvi_used
p1 <- volinPlot_real(ariMat[,main_order_names2], cols = cols_alpha2)
ariMat
ariMat[,7] <- ariVec_scvi_used
nmiMat[,7] <- nmiVec_scvi_used
ariVec[7] <- ariall_scvi_used
nmiVec[7] <- nmiall_scvi_used
rm(list=ls())
load("metric_clusterMat_deconCelltype_mergesubtype_bulb16_mergeV2.rds")
getwd()
save(ariMat, nmiMat, ariVec, nmiVec, file="metric_clusterMat_deconCelltype_mergesubtype_bulb16_mergeV2.rds")
object_delete <- setdiff(ls(), 'dir_current')
rm(list=object_delete)
source(paste0(dir_current, "//utility_funcs.R"))
setwd(paste0(dir_current, "dataFiles\\Bulb16\\") )
dir_current <- "E:\\Research paper\\IntegrateDRcluster\\AnalysisCode\\PRECAST_Analysis\\"
##### 4b #####
object_delete <- setdiff(ls(), 'dir_current')
rm(list=object_delete)
source(paste0(dir_current, "//utility_funcs.R"))
setwd(paste0(dir_current, "dataFiles\\Bulb16\\") )
cols_alpha2 <- c(cols_alpha, '#57A6D9')
main_order_names2 <- c(main_order_names)
main_order_names2[1] <- iDR_SC_newname
## Plot Macfadden's adjusted R2
load('MacR2Vec_Bulb16_merge70.rds')
p1 <- barPlot_real(MacR2Vec[main_order_names2], cols = cols_alpha2, ylabel = "McFadden_R2")+theme_classic() +
theme( axis.text.x = element_blank() ) + theme(text = element_text(size=20))
load("metric_clusterMat_deconCelltype_mergesubtype_bulb16_mergeV2.rds")
p1 <- volinPlot_real(ariMat[,main_order_names2], cols = cols_alpha2)
p2 <- volinPlot_real(nmiMat[,main_order_names2], ylabel = "NMI",  cols = cols_alpha2)
p1
ariMat
nmiMat
p1
p2
load("metric_scvi_used_bulb16_merge.rds")
load("metric_clusterMat_deconCelltype_mergesubtype_bulb16_mergeV2.rds")
head(ariMat)
ariMat[,7] <- ariVec_scvi_used
nmiMat[,7] <- nmiVec_scvi_used
volinPlot_real(ariMat[,main_order_names2], cols = cols_alpha2)
volinPlot_real(nmiMat[,main_order_names2], ylabel = "NMI",  cols = cols_alpha2)
ariVec[7] <- ariall_scvi_used
nmiVec[7] <- nmiall_scvi_used
save(ariMat,nmiMat,ariVec,nmiVec,  file="metric_clusterMat_deconCelltype_mergesubtype_bulb16_mergeV2.rds")
load("metric_clusterMat_deconCelltype_mergesubtype_bulb16_mergeV2.rds")
volinPlot_real(ariMat[,main_order_names2], cols = cols_alpha2)
volinPlot_real(nmiMat[,main_order_names2], ylabel = "NMI",  cols = cols_alpha2)
load("metric_clusterMat_deconCelltype_mergesubtype_bulb16_mergeV2.rds")
p1 <- volinPlot_real(ariMat[,main_order_names2], cols = cols_alpha2)
p1
##### 31 #####
object_delete <- setdiff(ls(), 'dir_current')
rm(list=object_delete)
setwd(paste0(dir_current, "dataFiles\\Liver8\\") )
cols_alpha
source(paste0(dir_current, "//utility_funcs.R"))
cols_alpha
load("metric_cluster_annotate_Liver8V2.rds")
apply(ariMat, 2, median)
cols_alpha2 <- c(cols_alpha, '#57A6D9')
main_order_names2 <- c(main_order_names)
main_order_names2[1] <- iDR_SC_newname
iDR_SC_newname
volinPlot_real(ariMat[,main_order_names2], cols = cols_alpha2)
barPlot_real(ariVec[main_order_names2], cols = cols_alpha2)+theme_classic() +
theme( axis.text.x = element_blank() ) + theme(text = element_text(size=20))
load("MethodR4_batchRemovalMat_Liver8V2.rds")
load("MethodPy5_batchRemovalMat_Liver8.rds")
clisiMat <- cbind(clisiMat, clisiMat_py)
ilisiMat <- cbind(ilisiMat, ilisiMat_py)
p1 <- volinPlot_real(clisiMat[,main_order_names2], cols = cols_alpha2, ylabel='cLISI') + ylim(c(1,3))
p1
p2 <- volinPlot_real(ilisiMat[,main_order_names2], ylabel = "iLISI",  cols = cols_alpha2)
p2
##### 3b #####
load("hZtsneList_mouseLiver8.rds")
library(ggthemes)
library(ggthemes)
palettes <- ggthemes_data[["tableau"]][["color-palettes"]][["regular"]]
pal1 <- tableau_color_pal("Classic 20")
max_n <- attr(pal1, "max_n")
pal2 <- tableau_color_pal("Classic Blue-Red 12")
max_n2 <- attr(pal2, "max_n")
cols_pal <- c(pal1(max_n), pal2(max_n2)[c(1,3,8,12)]);
idx_used <- c(6,5, 1, 4, 2 , 8,7)
cols_cluster2 <- cols_pal[idx_used]
## select colors
gg_color_hue <- function(n) {
hues = seq(15, 375, length = n + 1)
hcl(h = hues, l = 65, c = 100)[1:n]
}
cols_sample <- gg_color_hue(8)
pt_size_sample <- 1.5; pt_alpha_sample <- 0.8
pt_size_cluster <- 1.5; pt_alpha_cluster <- 1
base_axis_size <- 20
library(ggplot2)
str(hZtsneList)
pList_sample <- list(); pList_cluster <- list()
for(j in 1:length(hZtsneList)){
message('j = ', j)
pList_sample[[j]] <- plot_scatter(hZtsneList[[j]], meta_data, label_name = 'sample',border_col="gray10",
base_size=base_axis_size,palette_use=cols_sample, point_size = pt_size_sample,
point_alpha = pt_alpha_sample,no_guides=T) + labs(x=NULL, y=NULL)
pList_cluster[[j]] <- plot_scatter(hZtsneList[[j]], meta_data, label_name = 'cluster',
base_size=20,border_col="gray10",
palette_use=cols_cluster2,
point_size = pt_size_cluster,
point_alpha =pt_alpha_cluster,no_guides=T) + labs(x=NULL, y=NULL)
}
names(pList_sample) <-names(pList_cluster) <-  names(hZtsneList)
library(cowplot)
#pList_sample[[1]]
subnames <- c("iDR-SC" ,"Seurat V3", "fastMNN","MEFISTO", "Uncorrected")
p12 <- plot_grid(plotlist =pList_sample[subnames], nrow=1, ncol=5)
p12
names(hZtsneList)
pt_size_sample <- 0.5; pt_alpha_sample <- 0.8
pt_size_cluster <- 0.5; pt_alpha_cluster <- 1
base_axis_size <- 20
library(ggplot2)
str(hZtsneList)
pList_sample <- list(); pList_cluster <- list()
for(j in 1:length(hZtsneList)){
message('j = ', j)
pList_sample[[j]] <- plot_scatter(hZtsneList[[j]], meta_data, label_name = 'sample',border_col="gray10",
base_size=base_axis_size,palette_use=cols_sample, point_size = pt_size_sample,
point_alpha = pt_alpha_sample,no_guides=T) + labs(x=NULL, y=NULL)
pList_cluster[[j]] <- plot_scatter(hZtsneList[[j]], meta_data, label_name = 'cluster',
base_size=20,border_col="gray10",
palette_use=cols_cluster2,
point_size = pt_size_cluster,
point_alpha =pt_alpha_cluster,no_guides=T) + labs(x=NULL, y=NULL)
}
names(pList_sample) <-names(pList_cluster) <-  names(hZtsneList)
library(cowplot)
#pList_sample[[1]]
subnames <- c("iDR-SC" ,"Seurat V3", "fastMNN","MEFISTO", "Uncorrected")
p12 <- plot_grid(plotlist =pList_sample[subnames], nrow=1, ncol=5)
p1 <- pList_cluster[[1]]
pList_cluster[[1]] <- Seurat::LabelClusters(p1, id='cluster', repel = T,
size = 9, color = 'white',
box = T, position = "nearest")
p12 <- plot_grid(plotlist =pList_cluster[subnames], nrow=1, ncol=5)
p12
##### 3d #####
load('MacR2Vec_reference1_mouseLiver.rds')
names(MacR2Vec) <- main_order_names2
barPlot_real(MacR2Vec[main_order_names2], cols = cols_alpha2, ylabel = "McFadden's R^2")+theme_classic() +
theme( axis.text.x = element_blank() ) + theme(text = element_text(size=20))
##### 3e #####
load("metadata_filter2List_mouseLiverST.rds")
load("idrsc_cluster7_mouseLiver8.rds")
posList <- lapply(metadata_filter2List, function(x){
y <- cbind(x$row, x$col)
row.names(y) <- row.names(x)
y
} )
##### 3e #####
load("metadata_filter2List_mouseLiverST.rds")
posList <- lapply(metadata_filter2List, function(x){
y <- cbind(x$row, x$col)
row.names(y) <- row.names(x)
y
} )
color_pal = list("#CB181D","#EF3B2C","#FB6A4A","#FC9272","#FCBBA1","#1f77b4","#ff7f0e","#2ca02c","#c5b0d5")
slice_set <- 1
st_coord = posList[[slice_set]]
norm_weights = read.csv(paste('./deconvolution_data/output_weights_mouseLiver8_st',slice_set,'.csv',sep=""),row.names=1)
load("idrsc_cluster7_mouseLiver8.rds")
figure_list = list()
for (slice_set in 1:3){
# slice_set <- 1
st_coord = posList[[slice_set]]
norm_weights = read.csv(paste('./deconvolution_data/output_weights_mouseLiver8_st',slice_set,'.csv',sep=""),row.names=1)
cluster_id = cbind(posList[[slice_set]],clusterList[[slice_set]])
colnames(cluster_id) <- c("row", "col", "y")
cluster_weight = merge(norm_weights,cluster_id,by = 0)
rownames(cluster_weight) = cluster_weight$Row.names
cluster_weight = cluster_weight[,-1]
ct_set =  colnames(cluster_weight)[1:6]#[1:6] #"Hepatocyte_Alb.high" # "B.cell_Jchain.high" #
head(cluster_weight)
for(jj in 1: length(ct_set)){
## jj <- 2
ct <- ct_set[jj]
plot_val = as.data.frame(cluster_weight[,ct])
rownames(plot_val) = rownames(cluster_weight)
colnames(plot_val) = colnames(cluster_weight)[ct]
barcodes = rownames(plot_val)
my_table = as.data.frame(cluster_id[barcodes, c(1,2)] )
my_table$Proportion = plot_val[barcodes,]
my_table$cluster = cluster_weight[barcodes,'y']
ylimit = c(0, 1)
my_table$border_color = '#cccccc'
my_table$stroke = 0
select_cluster = c(1,2)
for (i in select_cluster){
my_table[my_table$cluster==i,'stroke'] = 0.45
}
for (i in 1:10){
my_table[my_table$cluster==i,"border_color"] = color_pal[i]
}
table(my_table$cluster)
my_table$Proportion <- range01(my_table$Proportion)
if(ct ==  "Erythroid.cell_Hbb.bs.high"){
med <- quantile(my_table$Proportion, 0.987)
}else{
med <- quantile(my_table$Proportion, 0.94)
}
my_table$Proportion[ my_table$Proportion > med] <- med
my_table$Proportion <- range01(my_table$Proportion)
plot <- ggplot(my_table, aes(x = row, y = col)) +
geom_point(aes(fill = Proportion),size = 2.3, stroke = my_table$stroke,alpha = 5,pch=21) +
scale_fill_gradientn(colors = c("#361A95","white", "#D62728")) +  # ,limits = ylimit,#FBA536
# scale_colour_gradient2(
#   low = "#361A95",
#   mid = "white",
#   high = "#FBA536", midpoint = med)+
scale_shape_identity() + scale_size_identity() + theme_classic() +
mytheme_graybox(base_size = 28) + scale_y_reverse() + theme(legend.position = 'none')
figure_list[[((slice_set-1) * length(ct_set) + jj)]] <- plot #+ coord_fixed() # + xlim(xlim) + ylim(ylim)
}
}
p12 <- cowplot::plot_grid(plotlist=figure_list, nrow=3, ncol=6, byrow=T)
p12
p12 <- cowplot::plot_grid(plotlist=figure_list, nrow=3, ncol=6, byrow=T)
ggsave(file='output_figs/select_type_Sample1.png', plot = p12,
width = 14, height = 6, units = "in", bg = 'white', dpi = 50,limitsize = F)
p12 <- cowplot::plot_grid(plotlist=figure_list, nrow=3, ncol=11, byrow=T)
ggsave(file='output_figs/select_type_group2_Sample1.png', plot = p12,
width = 26, height = 6, units = "in", bg = 'white', dpi = 50,limitsize = F)
length(figure_list)
object_delete <- setdiff(ls(), 'dir_current')
rm(list=object_delete)
setwd(paste0(dir_current, "dataFiles\\Liver8\\") )
source(paste0(dir_current, "//utility_funcs.R"))
load("metric_cluster_annotate_Liver8V2.rds")
apply(ariMat, 2, median)
cols_alpha2 <- c(cols_alpha, '#57A6D9')
main_order_names2 <- c(main_order_names)
main_order_names2[1] <- iDR_SC_newname
p1 <- volinPlot_real(ariMat[,main_order_names2], cols = cols_alpha2)
ggsave(file="./output_figs/volinPlot_ariMat_mouseLiver8.png", plot = p1,
width =5, height =7, units = "in", dpi = 800)
p1 <- barPlot_real(ariVec[main_order_names2], cols = cols_alpha2)+theme_classic() +
theme( axis.text.x = element_blank() ) + theme(text = element_text(size=20))
ggsave(file="./output_figs/barPlot_ariVec_mouseLiver8.png", plot = p1,
width =5, height =7, units = "in", dpi = 800)
p1 <- volinPlot_real(ariMat[,main_order_names2], cols = cols_alpha2)
ggsave(file="./output_figs/volinPlot_ariMat_mouseLiver8.png", plot = p1,
width =5, height =6, units = "in", dpi = 800)
p1 <- barPlot_real(ariVec[main_order_names2], cols = cols_alpha2)+theme_classic() +
theme( axis.text.x = element_blank() ) + theme(text = element_text(size=20))
ggsave(file="./output_figs/barPlot_ariVec_mouseLiver8.png", plot = p1,
width =5, height =6, units = "in", dpi = 800)
p1 <- volinPlot_real(ariMat[,main_order_names2], cols = cols_alpha2)
ggsave(file="./output_figs/volinPlot_ariMat_mouseLiver8.png", plot = p1,
width =5, height =5, units = "in", dpi = 800)
p1 <- barPlot_real(ariVec[main_order_names2], cols = cols_alpha2)+theme_classic() +
theme( axis.text.x = element_blank() ) + theme(text = element_text(size=20))
ggsave(file="./output_figs/barPlot_ariVec_mouseLiver8.png", plot = p1,
width =5, height =5, units = "in", dpi = 800)
load("MethodR4_batchRemovalMat_Liver8V2.rds")
load("MethodPy5_batchRemovalMat_Liver8.rds")
clisiMat <- cbind(clisiMat, clisiMat_py)
ilisiMat <- cbind(ilisiMat, ilisiMat_py)
p1 <- volinPlot_real(clisiMat[,main_order_names2], cols = cols_alpha2, ylabel='cLISI') + ylim(c(1,3))
ggsave(file="./output_figs/volinPlot_cLISI_mouseLiver8.png", plot = p1,
width =5, height =5, units = "in", dpi = 800)
p2 <- volinPlot_real(ilisiMat[,main_order_names2], ylabel = "iLISI",  cols = cols_alpha2)
ggsave(file="./output_figs/volinPlot_iLISI_mouseLiver8.png", plot = p2,
width =5, height =5, units = "in", dpi = 800)
##### 3b #####
load("hZtsneList_mouseLiver8.rds")
library(ggthemes)
palettes <- ggthemes_data[["tableau"]][["color-palettes"]][["regular"]]
pal1 <- tableau_color_pal("Classic 20")
max_n <- attr(pal1, "max_n")
pal2 <- tableau_color_pal("Classic Blue-Red 12")
max_n2 <- attr(pal2, "max_n")
cols_pal <- c(pal1(max_n), pal2(max_n2)[c(1,3,8,12)]);
idx_used <- c(6,5, 1, 4, 2 , 8,7)
cols_cluster2 <- cols_pal[idx_used]
## select colors
gg_color_hue <- function(n) {
hues = seq(15, 375, length = n + 1)
hcl(h = hues, l = 65, c = 100)[1:n]
}
cols_sample <- gg_color_hue(8)
pt_size_sample <- 0.5; pt_alpha_sample <- 0.8
pt_size_cluster <- 0.5; pt_alpha_cluster <- 1
base_axis_size <- 20
library(ggplot2)
str(hZtsneList)
pList_sample <- list(); pList_cluster <- list()
for(j in 1:length(hZtsneList)){
message('j = ', j)
pList_sample[[j]] <- plot_scatter(hZtsneList[[j]], meta_data, label_name = 'sample',border_col="gray10",
base_size=base_axis_size,palette_use=cols_sample, point_size = pt_size_sample,
point_alpha = pt_alpha_sample,no_guides=T) + labs(x=NULL, y=NULL)
pList_cluster[[j]] <- plot_scatter(hZtsneList[[j]], meta_data, label_name = 'cluster',
base_size=20,border_col="gray10",
palette_use=cols_cluster2,
point_size = pt_size_cluster,
point_alpha =pt_alpha_cluster,no_guides=T) + labs(x=NULL, y=NULL)
}
names(pList_sample) <-names(pList_cluster) <-  names(hZtsneList)
library(cowplot)
#pList_sample[[1]]
subnames <- c("iDR-SC" ,"Seurat V3", "fastMNN","MEFISTO", "Uncorrected")
p12 <- plot_grid(plotlist =pList_sample[subnames], nrow=1, ncol=5)
ggsave(file="./output_figs/Liver8_tsne_sample_heatmap.png", plot = p12,
width = 25, height =5, units = "in", dpi = 200)
p1 <- pList_cluster[[1]]
pList_cluster[[1]] <- Seurat::LabelClusters(p1, id='cluster', repel = T,
size = 9, color = 'white',
box = T, position = "nearest")
p12 <- plot_grid(plotlist =pList_cluster[subnames], nrow=1, ncol=5)
ggsave(file="./output_figs/Liver8_tsne_cluster_heatmap.png", plot = p12,
width = 25, height =5, units = "in", dpi = 200)
load("pseudotime_allspots_mouseLiver8V2.rds")
load("hZtsneList_mouseLiver8.rds")
pseudo.slingshot <- pseudo.slingshot2
str(pseudo.slingshot2)
tsne_idrsc <- hZtsneList[[1]]
str(tsne_idrsc)
dat1 <- data.frame(PC1=tsne_idrsc[,1], PC2=tsne_idrsc[,2], pseudotime=pseudo.slingshot,
scaled_pseudotime = range01(pseudo.slingshot, na.rm=T))
library(ggplot2)
med <- quantile(dat1$scaled_pseudotime, 0.3, na.rm=T)
p1 <- ggplot(subset(dat1, !is.na(pseudotime)), aes(x=PC1, y=PC2, color=scaled_pseudotime)) +
geom_point( alpha=1) +
scale_color_gradientn(colours = c( "#FFBB78", "#96B5E9", "#F54902"))+
theme(plot.title = element_text(hjust = 0.5),
axis.text.x=element_text(size=14,color="black"),
axis.text.y=element_text(size=14, color="black"),
axis.title.x = element_text(size=18, color='black'),
axis.title.y = element_text(size=18, color='black'),
title= element_text(size=20, color='blue'),
legend.text=element_text(size=14),
legend.position = 'none',
panel.background= element_rect(fill = 'white', colour = 'black')) +
cowplot::theme_cowplot()+ xlab('tSNE 1') + ylab("tSNE 2") + theme(legend.position = 'none')
p1
p1 <- ggplot(subset(dat1, !is.na(pseudotime)), aes(x=PC1, y=PC2, color=scaled_pseudotime)) +
geom_point( alpha=1) +
scale_color_gradientn(colours = c( "#FFBB78", "#96B5E9", "#F54902"))+
theme(plot.title = element_text(hjust = 0.5),
axis.text.x=element_text(size=14,color="black"),
axis.text.y=element_text(size=14, color="black"),
axis.title.x = element_text(size=18, color='black'),
axis.title.y = element_text(size=18, color='black'),
title= element_text(size=20, color='blue'),
legend.text=element_text(size=14),
legend.position = 'none',
panel.background= element_rect(fill = 'white', colour = 'black')) +
cowplot::theme_cowplot()+ xlab('tSNE 1') + ylab("tSNE 2")# + theme(legend.position = 'none')
p1
##### 3c #####
load('housekeep_dat_degsAll_mouseLiver8.rds')
n <- 10
dat_degs_all %>%
group_by(cluster) %>%
top_n(n = n, wt = avg_log2FC) -> top10
top10
cols_cluster2
cols_cluster <- c("#98df8a", "#2ca02c", "#1f77b4", "#ffbb78", "#aec7e8", "#ff9896", "#d62728")
color_id <- as.numeric(levels(Idents(seu)))
genes_use <- c("Cyp2e1", "Oat", "Cyp2c37", "Gulo", "Glul", "Slc1a2", 'Cyp2d9', "Gstm3",
"Malat1", "Cox1","Hamp2", "Cyp3a44", "Gsn", "Dpt","Vim", "Tagln",
"Cyp2f2", "Sds", "Hal", "Ctsc", "Aldh1b1", "Hsd17b13", "Spp1")
p1 <- doHeatmap(seu, features = genes_use, cell_label= "Domain",
grp_label = F, grp_color = cols_cluster[color_id],
#disp.max = 2.1,
pt_size=6,slot = 'scale.data') +
theme(legend.text = element_text(size=16),
legend.title = element_text(size=18, face='bold'),
axis.text.y = element_text(size=12, face= "italic", family='serif'))
##### 3c #####
library(Seurat)
p1 <- doHeatmap(seu, features = genes_use, cell_label= "Domain",
grp_label = F, grp_color = cols_cluster[color_id],
#disp.max = 2.1,
pt_size=6,slot = 'scale.data') +
theme(legend.text = element_text(size=16),
legend.title = element_text(size=18, face='bold'),
axis.text.y = element_text(size=12, face= "italic", family='serif'))
rm(list=ls())
library(iDR.SC)
library(iDR.SC)
### two data source
q <- 10; K <- 4
dat <- gendataInte_sp(width1 = 20, height1 = 20,height2=21, width2=21, p=100,q=q, K=K, sigma2 = 9,
beta=c(0.5, 1.0))
AdjList <- lapply(list(dat$pos1, dat$pos2), getAdj_reg, platform='ST')
message(sapply(AdjList, dim), '\n')
resList <- idrsc(list(dat$X1, dat$X2), list(dat$pos1, dat$pos2), q, K, maxIter = 30,
platform='ST',
Sigma_equal =T, Sigma_diag=T, error_heter = T, seed = 1, Sp2=T, verbose=T)
str(resList)
resList[[1]]$Sigma
sp_means_Rcpp(AdjList[[1]])
mclust::adjustedRandIndex(unlist(resList[[1]]$cluster), unlist(dat$cluster))
resList2 <- idrsc(list(dat$X1, dat$X2), list(dat$pos1, dat$pos2), q, K, platform = 'ST',
maxIter = 30,
error_heter =T,  Sigma_equal=F, wpca_int=F,
Sigma_diag = T, mix_prop_heter = T, Sp=T)
resList2[[1]]$Sigma
mclust::adjustedRandIndex(unlist(resList2[[1]]$cluster), unlist(dat$cluster))
idrsc
resList <- idrsc(list(dat$X1, dat$X2), q, K, posList=list(dat$pos1, dat$pos2),  maxIter = 30,
platform='ST',
Sigma_equal =T, Sigma_diag=T, error_heter = T, seed = 1, Sp2=T, verbose=T)
rm(list=l())
rm(list=ls())
